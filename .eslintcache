[{"G:\\other\\admin\\src\\index.js":"1","G:\\other\\admin\\src\\reportWebVitals.js":"2","G:\\other\\admin\\src\\frame\\Root.js":"3","G:\\other\\admin\\src\\page\\Signin.js":"4","G:\\other\\admin\\src\\frame\\Frame.js":"5","G:\\other\\admin\\src\\api.js":"6","G:\\other\\admin\\src\\components\\UserContext.js":"7","G:\\other\\admin\\src\\page\\system\\System.js":"8","G:\\other\\admin\\src\\uitls\\query.js":"9","G:\\other\\admin\\src\\components\\FormItem.js":"10","G:\\other\\admin\\src\\components\\Header.js":"11","G:\\other\\admin\\src\\hooks\\useUserInfo.js":"12","G:\\other\\admin\\src\\page\\shop\\Shop.js":"13","G:\\other\\admin\\src\\uitls\\http.js":"14","G:\\other\\admin\\src\\page\\Building.js":"15","G:\\other\\admin\\src\\uitls\\tools.js":"16","G:\\other\\admin\\src\\page\\shop\\List.js":"17","G:\\other\\admin\\src\\page\\shop\\Add.js":"18","G:\\other\\admin\\src\\components\\Transition.js":"19","G:\\other\\admin\\src\\page\\shop\\api.js":"20","G:\\other\\admin\\src\\components\\ShowMessage.js":"21","G:\\other\\admin\\src\\components\\Page.js":"22","G:\\other\\admin\\src\\components\\FormAttr.js":"23","G:\\other\\admin\\src\\page\\shop\\components\\ListEdit.js":"24","G:\\other\\admin\\src\\components\\FileUpload.js":"25","G:\\other\\admin\\src\\page\\system\\Web.js":"26","G:\\other\\admin\\src\\page\\system\\api.js":"27","G:\\other\\admin\\src\\components\\WebContext.js":"28","G:\\other\\admin\\src\\hooks\\useDebounce.js":"29","G:\\other\\admin\\src\\components\\Edit.js":"30","G:\\other\\admin\\src\\page\\home\\Home.js":"31","G:\\other\\admin\\src\\page\\home\\api.js":"32","G:\\other\\admin\\src\\page\\home\\components\\UserTable.js":"33","G:\\other\\admin\\src\\page\\home\\components\\IndexCard.js":"34","G:\\other\\admin\\src\\page\\home\\components\\HeightUserTable.js":"35","G:\\other\\admin\\src\\page\\home\\components\\CookiesTable.js":"36","G:\\other\\admin\\src\\page\\home\\components\\NewUserTable.js":"37","G:\\other\\admin\\src\\components\\AskButton.js":"38","G:\\other\\admin\\src\\page\\home\\components\\DelCode.js":"39","G:\\other\\admin\\src\\page\\home\\components\\CreateCode.js":"40","G:\\other\\admin\\src\\components\\TableLoading.js":"41","G:\\other\\admin\\src\\page\\home\\components\\UserInfo.js":"42","G:\\other\\admin\\src\\page\\home\\components\\UseCodeTable.js":"43"},{"size":665,"mtime":1613066854842,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1607618774917,"results":"46","hashOfConfig":"45"},{"size":300,"mtime":1613433964957,"results":"47","hashOfConfig":"45"},{"size":2061,"mtime":1618849151380,"results":"48","hashOfConfig":"45"},{"size":1419,"mtime":1618849151379,"results":"49","hashOfConfig":"45"},{"size":554,"mtime":1617373543216,"results":"50","hashOfConfig":"45"},{"size":83,"mtime":1613194261672,"results":"51","hashOfConfig":"45"},{"size":1216,"mtime":1614917467954,"results":"52","hashOfConfig":"45"},{"size":4701,"mtime":1618849151404,"results":"53","hashOfConfig":"45"},{"size":462,"mtime":1613435865805,"results":"54","hashOfConfig":"45"},{"size":2024,"mtime":1618849151377,"results":"55","hashOfConfig":"45"},{"size":481,"mtime":1614783793404,"results":"56","hashOfConfig":"45"},{"size":1550,"mtime":1614917309048,"results":"57","hashOfConfig":"45"},{"size":489,"mtime":1613425898221,"results":"58","hashOfConfig":"45"},{"size":199,"mtime":1613434758061,"results":"59","hashOfConfig":"45"},{"size":1891,"mtime":1618849151405,"results":"60","hashOfConfig":"45"},{"size":4897,"mtime":1618849151390,"results":"61","hashOfConfig":"45"},{"size":4131,"mtime":1618849151389,"results":"62","hashOfConfig":"45"},{"size":832,"mtime":1614569738724,"results":"63","hashOfConfig":"45"},{"size":1173,"mtime":1614658136093,"results":"64","hashOfConfig":"45"},{"size":799,"mtime":1618849151378,"results":"65","hashOfConfig":"45"},{"size":1596,"mtime":1618849151377,"results":"66","hashOfConfig":"45"},{"size":2004,"mtime":1614655274036,"results":"67","hashOfConfig":"45"},{"size":2684,"mtime":1618849151402,"results":"68","hashOfConfig":"45"},{"size":3919,"mtime":1615002515166,"results":"69","hashOfConfig":"45"},{"size":4022,"mtime":1614824925824,"results":"70","hashOfConfig":"45"},{"size":336,"mtime":1614780669413,"results":"71","hashOfConfig":"45"},{"size":87,"mtime":1614783293749,"results":"72","hashOfConfig":"45"},{"size":520,"mtime":1614784520959,"results":"73","hashOfConfig":"45"},{"size":2635,"mtime":1614826808647,"results":"74","hashOfConfig":"45"},{"size":5364,"mtime":1619443196735,"results":"75","hashOfConfig":"45"},{"size":1330,"mtime":1619443460627,"results":"76","hashOfConfig":"45"},{"size":1841,"mtime":1616254707941,"results":"77","hashOfConfig":"45"},{"size":656,"mtime":1618849151386,"results":"78","hashOfConfig":"45"},{"size":3281,"mtime":1618849151386,"results":"79","hashOfConfig":"45"},{"size":3478,"mtime":1618849162739,"results":"80","hashOfConfig":"45"},{"size":4576,"mtime":1618849151387,"results":"81","hashOfConfig":"45"},{"size":1809,"mtime":1618849151376,"results":"82","hashOfConfig":"45"},{"size":1292,"mtime":1618849151384,"results":"83","hashOfConfig":"45"},{"size":2177,"mtime":1618849162741,"results":"84","hashOfConfig":"45"},{"size":537,"mtime":1618849151379,"results":"85","hashOfConfig":"45"},{"size":6535,"mtime":1618849151388,"results":"86","hashOfConfig":"45"},{"size":5139,"mtime":1619443842282,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"15yms8x",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"90"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"90"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"90"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"90"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"90"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\other\\admin\\src\\index.js",[],["203","204"],"G:\\other\\admin\\src\\reportWebVitals.js",[],"G:\\other\\admin\\src\\frame\\Root.js",[],"G:\\other\\admin\\src\\page\\Signin.js",["205"],"import React from \"react\";\r\nimport { Box, Heading, TextField, Callout, Button, Spinner } from \"gestalt\";\r\nimport { useQuery } from \"../uitls/query\";\r\nimport { signin } from \"../api\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport FormItem from \"../components/FormItem\";\r\n\r\nfunction Signin({ history }) {\r\n  let { fetch, error, loading } = useQuery(signin, null, {\r\n    onSuccess: () => {\r\n      history.push(\"/\");\r\n    },\r\n  });\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = (data) => {\r\n    fetch(data);\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"center\" height=\"100%\">\r\n      <Box borderStyle=\"sm\" display=\"flex\" margin=\"auto\" marginTop=\"auto\" wrap width=\"100%\" direction=\"column\" maxWidth={800}>\r\n        <Box flex=\"grow\" paddingX={3} paddingY={3}>\r\n          <Heading size=\"sm\" accessibilityLevel={2}>\r\n            登录后台管理系统\r\n          </Heading>\r\n        </Box>\r\n        <Box paddingX={1} paddingY={1}>\r\n          {error && <Callout type=\"error\" iconAccessibilityLabel=\"Error icon\" message={error} />}\r\n        </Box>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Box flex=\"grow\" paddingX={3} paddingY={3}>\r\n            <FormItem com={TextField} name=\"name\" label=\"账号\" placeholder=\"请输入账号\" ref={register} />\r\n          </Box>\r\n\r\n          <Box flex=\"grow\" paddingX={3} paddingY={3}>\r\n            <FormItem com={TextField} name=\"password\" label=\"密码\" type=\"password\" placeholder=\"请输入密码\" ref={register} />\r\n          </Box>\r\n\r\n          <Spinner show={loading} accessibilityLabel=\"登录中\" size=\"sm\" />\r\n          <Box flex=\"grow\" paddingX={3} paddingY={3}>\r\n            <Box justifyContent=\"end\" marginStart={-1} marginEnd={-1} marginTop={-1} marginBottom={-1} display=\"flex\" wrap>\r\n              <Box paddingX={1} paddingY={1}>\r\n                <Button text=\"登录\" color=\"red\" size=\"lg\" type=\"submit\" />\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </form>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\nexport default Signin;\r\n","G:\\other\\admin\\src\\frame\\Frame.js",["206","207","208","209","210"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Box, Spinner } from \"gestalt\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport System from \"../page/system/System\";\r\nimport Shop from \"../page/shop/Shop\";\r\nimport Home from \"../page/home/Home\";\r\nimport useUserInfo from \"../hooks/useUserInfo\";\r\nimport { UserContext } from \"../components/UserContext\";\r\nimport { getWebConfig } from \"../api\";\r\nimport { useAutoQuery } from \"../uitls/query\";\r\nimport { WebCtx } from \"../components/WebContext\";\r\n\r\nfunction IndexPage(props) {\r\n  let { data, update, loading } = useAutoQuery(getWebConfig, {}, { cachePolicy: \"local\" });\r\n  let { data: userData, update: userUpdate } = useUserInfo(props.history.push);\r\n  if (!userData.id) {\r\n    return (\r\n      <Box paddingY={12}>\r\n        <Spinner show={true} accessibilityLabel=\"获取用户数据\" />\r\n      </Box>\r\n    );\r\n  }\r\n  return (\r\n    <WebCtx.Provider value={{ ...data, update }}>\r\n      <UserContext.Provider value={{ ...userData, update: userUpdate }}>\r\n        <Header {...props} />\r\n        <Switch location={props.location}>\r\n          <Route path=\"/system\" component={System} />\r\n          <Route path=\"/shop\" component={Shop} />\r\n          <Route path=\"/\" component={Home} />\r\n        </Switch>\r\n      </UserContext.Provider>\r\n    </WebCtx.Provider>\r\n  );\r\n}\r\n\r\nexport default IndexPage;\r\n","G:\\other\\admin\\src\\api.js",["211"],"import axios from \"./uitls/http\";\r\nexport const baseUrl = process.env.NODE_ENV == \"development\" ? \"/api\" : \"\";\r\n//登录\r\nexport async function signin(params) {\r\n  let { data } = await axios.post(baseUrl + \"/user/signin\", { ...params });\r\n  return data.data;\r\n}\r\n\r\n//获取用户消息\r\nexport async function userInfo(params) {\r\n  let { data } = await axios.get(baseUrl + \"/user/info\", { ...params });\r\n  return data.data;\r\n}\r\n\r\nexport async function getWebConfig() {\r\n  let { data } = await axios.get(baseUrl + \"/web/config/\");\r\n  return data.data;\r\n}\r\n","G:\\other\\admin\\src\\components\\UserContext.js",[],"G:\\other\\admin\\src\\page\\system\\System.js",["212"],"import React from \"react\";\r\nimport { Box, Column, Button, Divider } from \"gestalt\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport Transition from \"../../components/Transition\";\r\nimport Building from \"../Building\";\r\nimport Web from \"./Web\";\r\n\r\nfunction System(props) {\r\n  return (\r\n    <Box display=\"flex\" direction=\"row\" paddingY={2}>\r\n      <Column span={2}>\r\n        <Box color=\"lightGray\" padding={1}>\r\n          <Box color=\"white\" paddingY={2}>\r\n            <Link to=\"/system/\">\r\n              <Button text=\"网站设置\" color=\"transparent\" />\r\n            </Link>\r\n            <Divider />\r\n            <Link to=\"/system/config\">\r\n              <Button text=\"环境变量\" color=\"transparent\" />\r\n            </Link>\r\n          </Box>\r\n        </Box>\r\n      </Column>\r\n      <Column span={10}>\r\n        <Box color=\"lightGray\" padding={1}>\r\n          <Box color=\"white\" paddingY={2} overflow=\"hidden\" minHeight={800}>\r\n            <Switch>\r\n              <Route exact path=\"/system/\" component={Web} />\r\n              <Route path=\"/system/config\" component={Building} />\r\n            </Switch>\r\n          </Box>\r\n        </Box>\r\n      </Column>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default System;\r\n","G:\\other\\admin\\src\\uitls\\query.js",["213","214","215","216","217","218","219","220","221","222","223"],"import { useState, useEffect, useRef } from \"react\";\r\n\r\n//缓存处理\r\nconst cache = {\r\n  data: {},\r\n  set(name, value, policy) {\r\n    if (policy == \"memory\") {\r\n      cache.data[name] = value;\r\n    } else if (policy == \"local\") {\r\n      localStorage.setItem(name, JSON.stringify(value));\r\n    }\r\n  },\r\n  get(name, policy) {\r\n    if (policy == \"memory\") {\r\n      return cache.data[name];\r\n    } else if (policy == \"local\") {\r\n      return JSON.parse(localStorage.getItem(name));\r\n    }\r\n  },\r\n  his(name, policy) {\r\n    if (policy == \"memory\") {\r\n      return !!cache.data[name];\r\n    } else if (policy == \"local\") {\r\n      return localStorage.hisItem(name);\r\n    }\r\n  },\r\n  remove(name, policy) {\r\n    if (policy == \"memory\") {\r\n      delete cache.data[name];\r\n    } else if (policy == \"local\") {\r\n      return localStorage.removeItem(name);\r\n    }\r\n  },\r\n};\r\n\r\nfunction handleOption(opt) {\r\n  let newList = [];\r\n  function work(opt) {\r\n    if (Array.isArray(opt)) {\r\n      opt.forEach(work);\r\n    } else if (opt instanceof Object) {\r\n      Object.values(opt).forEach(work);\r\n    } else {\r\n      newList.push(opt);\r\n    }\r\n  }\r\n  work(opt);\r\n  return newList;\r\n}\r\n\r\n//获取查询函数的特征\r\nfunction getQlKey(ql, params) {\r\n  let paramsStr = handleOption(params).join(\"-\");\r\n  return `${ql.name}_${ql.toString().length}_${paramsStr}`;\r\n}\r\n\r\nfunction useBaseFetch(ql, { defaultData }) {\r\n  let [data, setData] = useState(defaultData || {});\r\n  let [loading, setLoading] = useState(false);\r\n  let [error, setError] = useState(null);\r\n\r\n  let mountRef = useRef();\r\n  let cacheRef = useRef();\r\n  useEffect(() => {\r\n    mountRef.current = true;\r\n    return () => {\r\n      mountRef.current = false;\r\n    };\r\n  }, []);\r\n  async function fetch(params, { onError, onSuccess, updateQuery, title = \"请求\", cachePolicy = \"none\", isUpdate = false }) {\r\n    cacheRef.current = {\r\n      key: getQlKey(ql, params),\r\n      policy: cachePolicy,\r\n    };\r\n    //更新时不取缓存\r\n    let res = !isUpdate && cache.get(cacheRef.current.key, cacheRef.current.policy);\r\n\r\n    //如果不存在缓存则取请求\r\n    if (!res) {\r\n      // 初始数据\r\n      setLoading(true);\r\n      setError(null);\r\n      res = await ql(params)\r\n        .then((resData) => {\r\n          cache.set(cacheRef.current.key, resData, cacheRef.current.policy);\r\n          return resData;\r\n        })\r\n        .catch(function (error) {\r\n          if (!mountRef.current) {\r\n            return;\r\n          }\r\n          setLoading(false);\r\n          setError(error.message);\r\n          onError && onError({ type: \"error\", message: `${error.message || error.msg}` });\r\n        });\r\n    }\r\n\r\n    if (res) {\r\n      if (!mountRef.current) {\r\n        return;\r\n      }\r\n      onSuccess && onSuccess({ type: \"success\", message: `${title}成功` }, res);\r\n      setLoading(false);\r\n      if (updateQuery) {\r\n        res = updateQuery(data, res, params);\r\n      }\r\n      setData(res);\r\n    }\r\n  }\r\n\r\n  //更新缓存数据\r\n  function updateCache(fun) {\r\n    let res = fun({ ...data });\r\n    if (cacheRef.current) {\r\n      cache.set(cacheRef.current.key, res, cacheRef.current.policy);\r\n    }\r\n    if (mountRef.current) {\r\n      setData(res);\r\n    }\r\n  }\r\n  return { fetch, data, loading, error, setError, updateCache, setLoading };\r\n}\r\nexport function useQuery(ql, params, options = {}) {\r\n  let context = useBaseFetch(ql, options);\r\n  return {\r\n    ...context,\r\n    fetch: (newParams, newOptions) => {\r\n      context.fetch({ ...params, ...newParams }, { ...options, ...newOptions });\r\n    },\r\n  };\r\n}\r\n\r\nexport function useAutoQuery(ql, params = {}, options = {}) {\r\n  let context = useBaseFetch(ql, options);\r\n  let defaultData = options.defaultData;\r\n\r\n  let notDefault = useRef();\r\n  useEffect(() => {\r\n    //如果存在defaultData 则第一次不需要请求数据, notDefault是用来记录是否是第一次\r\n    let isFetch = notDefault.current || !defaultData || Object.keys(defaultData).length == 0;\r\n    notDefault.current = true;\r\n    if (isFetch) {\r\n      //是否等待\r\n      if (options.stop) {\r\n        //停止不需要加载效果\r\n      } else if (options.hold) {\r\n        //hold需要加载效果\r\n        context.setLoading(true);\r\n      } else {\r\n        context.fetch(params, options);\r\n      }\r\n    }\r\n  }, handleOption({ ...params, hold: options.hold, stop: options.stop }));\r\n\r\n  return {\r\n    ...context,\r\n    fetchMore: (newParams, newOptions, updateQuery) => {\r\n      context.fetch({ ...params, ...newParams }, { updateQuery, ...options, ...newOptions });\r\n    },\r\n    update: () => {\r\n      //更新时必须去服务器拉取数据\r\n      context.fetch(params, { ...options, isUpdate: true });\r\n    },\r\n  };\r\n}\r\n","G:\\other\\admin\\src\\components\\FormItem.js",[],"G:\\other\\admin\\src\\components\\Header.js",["224","225","226","227","228"],"import React, { useContext } from \"react\";\r\nimport { Box, Icon, ButtonGroup, Button, IconButton, Divider, Heading, SearchField } from \"gestalt\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { clearAllCookie, getImgSrc } from \"../uitls/tools\";\r\nimport { WebCtx } from \"./WebContext\";\r\nfunction Header({ history }) {\r\n  const [value, setValue] = React.useState(\"\");\r\n  let web = useContext(WebCtx);\r\n  return (\r\n    <Box color=\"white\" rounding={2} padding={3} display=\"flex\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Box>\r\n          <img src={getImgSrc(web.logo)} width={35} height={35} />\r\n        </Box>\r\n        <Box padding={2}>\r\n          <Heading color=\"red\" size=\"sm\">\r\n            {web.title}\r\n          </Heading>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box padding={2}>\r\n        <ButtonGroup>\r\n          <NavLink exact activeClassName=\"selected\" to=\"/\">\r\n            <Button text=\"主页\" color=\"transparent\" />\r\n          </NavLink>\r\n          <Divider />\r\n          {/* <NavLink activeClassName=\"selected\" to=\"/shop\">\r\n            <Button text=\"商品\" color=\"transparent\" />\r\n          </NavLink> */}\r\n          <NavLink activeClassName=\"selected\" to=\"/system\">\r\n            <Button text=\"系统\" color=\"transparent\" />\r\n          </NavLink>\r\n        </ButtonGroup>\r\n      </Box>\r\n      <Box flex=\"grow\" paddingX={2}>\r\n        {/* <SearchField accessibilityLabel=\"Demo Search Field\" id=\"searchField\" onChange={({ value }) => setValue(value)} placeholder=\"Search and explore\" value={value} /> */}\r\n      </Box>\r\n      {/* <Box paddingX={2}>\r\n        <IconButton accessibilityLabel=\"Notifications\" icon=\"speech-ellipsis\" size=\"md\" />\r\n      </Box> */}\r\n      <Box paddingX={2}>\r\n        <IconButton\r\n          accessibilityLabel=\"退出\"\r\n          icon=\"logout\"\r\n          size=\"md\"\r\n          onClick={(e) => {\r\n            clearAllCookie();\r\n            history.push(\"/signin\");\r\n          }}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","G:\\other\\admin\\src\\hooks\\useUserInfo.js",["229","230"],"import React, { useEffect } from \"react\";\r\nimport { useAutoQuery } from \"../uitls/query\";\r\nimport { userInfo } from \"../api\";\r\n\r\nfunction useUserInfo(push) {\r\n  let { data, update, error, loading } = useAutoQuery(userInfo, null, {\r\n    onError(msg, e) {\r\n      push(\"/signin\");\r\n    },\r\n    onSuccess(msg, data) {\r\n      if (data.role !== \"admin\") {\r\n        push(\"/signin\");\r\n      }\r\n    },\r\n  });\r\n\r\n  return { data, update, error, loading };\r\n}\r\n\r\nexport default useUserInfo;\r\n","G:\\other\\admin\\src\\page\\shop\\Shop.js",["231"],"import React from \"react\";\r\nimport { Box, Column, Button, Divider } from \"gestalt\";\r\nimport { Switch, Route, NavLink } from \"react-router-dom\";\r\nimport Transition from \"../../components/Transition\";\r\nimport List from \"./List\";\r\nimport Add from \"./Add\";\r\nfunction Shop(props) {\r\n  return (\r\n    <Box display=\"flex\" direction=\"row\" paddingY={2}>\r\n      <Column span={2}>\r\n        <Box color=\"lightGray\" padding={1}>\r\n          <Box color=\"white\" paddingY={2}>\r\n            <NavLink exact activeClassName=\"selected\" to=\"/shop\">\r\n              <Button text=\"商品列表\" color=\"transparent\" />\r\n            </NavLink>\r\n            <Divider />\r\n            <NavLink activeClassName=\"selected\" to=\"/shop/add\">\r\n              <Button text=\"添加商品\" color=\"transparent\" />\r\n            </NavLink>\r\n            <Divider />\r\n            <NavLink activeClassName=\"selected\" to=\"/shop/recovery?status=1\">\r\n              <Button text=\"回收站\" color=\"transparent\" />\r\n            </NavLink>\r\n          </Box>\r\n        </Box>\r\n      </Column>\r\n      <Column span={10}>\r\n        <Box color=\"lightGray\" padding={1}>\r\n          <Box color=\"white\" paddingY={2} minHeight={900}>\r\n            <Switch>\r\n              <Route path=\"/shop/add\" component={Add} />\r\n              <Route path=\"/shop/edit/:id\" component={Add} />\r\n              <Route path=\"/shop/recovery\" component={List} />\r\n              <Route path=\"/shop\" component={List} />\r\n            </Switch>\r\n          </Box>\r\n        </Box>\r\n      </Column>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Shop;\r\n","G:\\other\\admin\\src\\uitls\\http.js",[],"G:\\other\\admin\\src\\page\\Building.js",[],"G:\\other\\admin\\src\\uitls\\tools.js",["232","233"],"import { useState, useEffect } from \"react\";\r\nimport { baseUrl } from \"../api\";\r\nimport { Text } from \"gestalt\";\r\nimport dayjs from \"dayjs\";\r\nrequire(\"dayjs/locale/zh-cn\");\r\nvar utc = require(\"dayjs/plugin/utc\");\r\nvar relativeTime = require(\"dayjs/plugin/relativeTime\");\r\ndayjs.extend(utc);\r\ndayjs.extend(relativeTime);\r\ndayjs.locale(\"zh-cn\");\r\n\r\n//解析url请求参数\r\nexport function parseQuery(query) {\r\n  var reg = /([^=&\\s]+)[=\\s]*([^&\\s]*)/g;\r\n  var obj = {};\r\n  while (reg.exec(query)) {\r\n    obj[RegExp.$1] = RegExp.$2;\r\n  }\r\n  return obj;\r\n}\r\n\r\nexport function getVideoData() {\r\n  let sourceList = JSON.parse(localStorage.getItem(\"sourceList\"));\r\n  let queryData = parseQuery(window.location.search.slice(1));\r\n  return sourceList.find((item) => item.id == queryData.id);\r\n}\r\n\r\nexport function useVideo() {\r\n  let [data, setData] = useState({});\r\n  useEffect(() => {\r\n    setData(getVideoData());\r\n  }, []);\r\n  return data;\r\n}\r\n\r\nexport function getImgSrc(src) {\r\n  return src && src.startsWith(\"http\") ? src : `${baseUrl}${src}`;\r\n}\r\nexport function getThumbSrc(src, size = \"sm\") {\r\n  return src && src.startsWith(\"http\") ? src : `${baseUrl}/file/thumb?img=${src}&size=${size}`;\r\n}\r\n\r\nexport function clearAllCookie() {\r\n  var date = new Date();\r\n  date.setTime(date.getTime() - 10000);\r\n  var keys = document.cookie.match(/[^ =;]+(?=\\=)/g);\r\n  console.log(\"需要删除的cookie名字：\" + keys);\r\n  if (keys) {\r\n    for (var i = keys.length; i--; ) document.cookie = keys[i] + \"=0; expire=\" + date.toGMTString() + \"; path=/\";\r\n  }\r\n}\r\n\r\nexport function formatTime(time) {\r\n  return time ? dayjs.utc(time).local().format(\"YYYY-MM-DD HH:mm:ss\") : \"\";\r\n}\r\n\r\nexport function userStatus(status) {\r\n  let names = {\r\n    0: <Text>正常</Text>,\r\n    1: <Text color=\"orange\">已注销</Text>,\r\n    2: <Text color=\"red\">已封禁</Text>,\r\n  };\r\n  return names[status] || names[0];\r\n}\r\n","G:\\other\\admin\\src\\page\\shop\\List.js",["234","235"],"import React, { useState } from \"react\";\r\nimport { useAutoQuery, useQuery } from \"../../uitls/query\";\r\nimport { shops, delShop } from \"./api\";\r\nimport { Table, Text, Image, Mask, Box, IconButton, SearchField, Spinner } from \"gestalt\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getImgSrc, getThumbSrc } from \"../../uitls/tools\";\r\nimport Page from \"../../components/Page\";\r\nimport ListEdit from \"./components/ListEdit\";\r\nlet pDatas = {};\r\nfunction List(props) {\r\n  let key = props.location.pathname;\r\n\r\n  let params = new URLSearchParams(props.location.search);\r\n\r\n  let [keyword, setKeyword] = useState(\"\");\r\n  let { data, update, loading, fetchMore, updateCache } = useAutoQuery(\r\n    shops,\r\n    { status: params.get(\"status\") || 0, keyword },\r\n    { defaultData: props.history.action == \"POP\" && pDatas[key] }\r\n  );\r\n  let { fetch: delFetch } = useQuery(delShop, {}, { onSuccess: () => update() });\r\n\r\n  pDatas[key] = data;\r\n  let { list, page, total_page, page_size } = data;\r\n  return (\r\n    <Box>\r\n      <Box padding={2}>\r\n        <Box width={250} marginStart=\"auto\">\r\n          <SearchField accessibilityLabel=\"搜索\" id=\"searchField\" onChange={({ value }) => setKeyword(value)} placeholder=\"搜索\" value={keyword} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Table>\r\n        <Table.Header sticky>\r\n          <Table.Row>\r\n            <Table.HeaderCell>\r\n              <Text weight=\"bold\">图片</Text>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell>\r\n              <Text weight=\"bold\">商品名</Text>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell>\r\n              <Text weight=\"bold\">价格</Text>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell>\r\n              <Text weight=\"bold\">代理商品名</Text>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell>\r\n              <Text weight=\"bold\">代理价格</Text>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell>\r\n              <Text weight=\"bold\">库存</Text>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell>\r\n              <Text weight=\"bold\">编辑</Text>\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {list?.map((item, key) => (\r\n            <Table.Row key={item.id}>\r\n              <Table.Cell>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Box width={80}>\r\n                    {item.photo && (\r\n                      <Mask rounding={2} wash>\r\n                        <Image alt=\"Luna\" src={getThumbSrc(item.photo[0]?.url, \"xs\")} naturalHeight={50} naturalWidth={50} />\r\n                      </Mask>\r\n                    )}\r\n                  </Box>\r\n                  <Box paddingX={1}>\r\n                    <Text>+{item.photo.length}</Text>\r\n                  </Box>\r\n                </Box>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Text>{item.name}</Text>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Text>{item.price}</Text>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Text>{item.proxy_name}</Text>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Text>{item.proxy_price}</Text>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <ListEdit\r\n                  num={item.attr_num}\r\n                  data={item.attr}\r\n                  onChange={(item, attrKay) => {\r\n                    updateCache((data) => {\r\n                      data.list[key].attr[attrKay] = item;\r\n                      let total = data.list[key].attr.reduce((total, item) => {\r\n                        return Number(total) + Number(item.value);\r\n                      }, 0);\r\n                      data.list[key].attr_num = total.toString();\r\n                      return data;\r\n                    });\r\n                  }}\r\n                />\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Box display=\"flex\">\r\n                  <Link to={`/shop/edit/${item.id}`}>\r\n                    <IconButton icon=\"edit\" />\r\n                  </Link>\r\n                  {item.status === 0 && (\r\n                    <IconButton\r\n                      accessibilityLabel=\"cancel\"\r\n                      icon=\"cancel\"\r\n                      onClick={(e) => {\r\n                        delFetch({ id: item.id });\r\n                      }}\r\n                    />\r\n                  )}\r\n                </Box>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n      <Box position=\"absolute\" width=\"100%\">\r\n        <Spinner show={loading} accessibilityLabel=\"加载中\" size=\"sm\" />\r\n      </Box>\r\n      <Page page={page} page_size={page_size} total_page={total_page} onChange={fetchMore} />\r\n    </Box>\r\n  );\r\n}\r\nexport default List;\r\n","G:\\other\\admin\\src\\page\\shop\\Add.js",["236","237","238"],"import React, { useEffect, useState } from \"react\";\r\nimport { Box, TextField, Heading, Flex, Button, Callout } from \"gestalt\";\r\nimport FormItem from \"../../components/FormItem\";\r\nimport FileUpload from \"../../components/FileUpload\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport { addShop, editShop, getShop, reShop } from \"./api\";\r\nimport { useQuery, useAutoQuery } from \"../../uitls/query\";\r\nimport FormAttr from \"../../components/FormAttr\";\r\nimport ShowMessage from \"../../components/ShowMessage\";\r\n//import Edit from \"../../components/Edit\";\r\n\r\nfunction Add(props) {\r\n  let [message, setMessage] = useState(\"\");\r\n  let { id } = props.match.params;\r\n  let isEdit = typeof id !== \"undefined\";\r\n  const { control, register, reset, handleSubmit, watch } = useForm();\r\n  let formCtx = {\r\n    control,\r\n    register,\r\n    reset,\r\n    handleSubmit,\r\n    watch,\r\n  };\r\n  let { fetch, error } = useQuery(isEdit ? editShop : addShop, null, {\r\n    onSuccess: (msg, data) => {\r\n      setMessage(msg);\r\n      props.history.replace(\"/shop\");\r\n    },\r\n  });\r\n  let { fetch: reShopFetch } = useQuery(reShop, { id: id }, { onSuccess: setMessage });\r\n\r\n  let { data } = useAutoQuery(getShop, { id: id }, { stop: !id, onSuccess: (msg, res) => reset(res) });\r\n\r\n  const onSubmit = (data) => fetch(isEdit ? { id, ...data } : data);\r\n  return (\r\n    <Box padding={3}>\r\n      <Flex justifyContent=\"center\">\r\n        <Box direction=\"column\" display=\"flex\" maxWidth={1200} width=\"100%\" wrap>\r\n          <Box flex=\"grow\" paddingX={3} paddingY={3}>\r\n            <Heading accessibilityLevel={2} size=\"md\">\r\n              添加商品\r\n            </Heading>\r\n          </Box>\r\n          <ShowMessage message={message} />\r\n          <Box paddingX={1} paddingY={1}>\r\n            {error && <Callout type=\"error\" iconAccessibilityLabel=\"Error icon\" message={error} />}\r\n          </Box>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Box display=\"flex\" wrap>\r\n              <Box flex=\"grow\" paddingX={3} paddingY={3}>\r\n                <FormItem com={TextField} name=\"brand\" label=\"品牌\" ref={register()} />\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box display=\"flex\" wrap>\r\n              <Box flex=\"grow\" paddingX={3} paddingY={3}>\r\n                <FormItem com={TextField} name=\"name\" label=\"名字\" ref={register()} />\r\n              </Box>\r\n              <Box flex=\"grow\" paddingX={3} paddingY={3}>\r\n                <FormItem com={TextField} name=\"proxy_name\" label=\"代理名字\" ref={register()} />\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box display=\"flex\" wrap>\r\n              <Box flex=\"grow\" paddingX={3} paddingY={3}>\r\n                <FormItem com={TextField} name=\"price\" label=\"价格\" type=\"number\" ref={register()} />\r\n              </Box>\r\n              <Box flex=\"grow\" paddingX={3} paddingY={3}>\r\n                <FormItem com={TextField} name=\"proxy_price\" label=\"代理价格\" type=\"number\" ref={register()} />\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box flex=\"grow\" paddingX={3} paddingY={3}>\r\n              <FileUpload name=\"photo\" label=\"上传封面\" formCtx={formCtx} />\r\n            </Box>\r\n\r\n            <Box flex=\"grow\" paddingX={3} paddingY={3}>\r\n              <Heading accessibilityLevel={2} size=\"sm\">\r\n                附加属性\r\n              </Heading>\r\n            </Box>\r\n\r\n            <FormAttr name=\"attr\" formCtx={formCtx} />\r\n\r\n            <Box display=\"flex\" justifyContent=\"end\" paddingX={3} paddingY={3} marginTop={2}>\r\n              <Box margin={1}>\r\n                <Button text=\"返回\" inline onClick={(e) => props.history.goBack()} />\r\n              </Box>\r\n              {data.status == 1 && (\r\n                <Box margin={1}>\r\n                  <Button text=\"从回收站恢复\" inline onClick={(e) => reShopFetch()} />\r\n                </Box>\r\n              )}\r\n              <Box margin={1}>\r\n                <Button text=\"保存商品\" color=\"red\" inline type=\"submit\" />\r\n              </Box>\r\n            </Box>\r\n          </form>\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\nexport default Add;\r\n","G:\\other\\admin\\src\\components\\Transition.js",["239","240"],"import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\n// The duration for each phase of the transition\r\n// So the total duration will be _twice_ this\r\nconst timeout = 600;\r\n\r\nlet pPathName = \"\";\r\nconst Transition = ({ children, history, location }) => {\r\n  //记录上次动画的key，如果页面非替换则播放动画\r\n  if (history.action != \"REPLACE\") {\r\n    pPathName = location.pathname;\r\n  }\r\n  return (\r\n    <TransitionGroup className=\"pagebox\">\r\n      <CSSTransition appear={true} key={history.action == \"REPLACE\" ? pPathName : location.pathname} timeout={timeout} classNames=\"page\">\r\n        {/* {(status) => <div style={styles[status]}></div>} */}\r\n        <div>{children}</div>\r\n      </CSSTransition>\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default Transition;\r\n","G:\\other\\admin\\src\\page\\shop\\api.js",["241"],"import axios from \"../../uitls/http\";\r\nimport { baseUrl } from \"../../api\";\r\n\r\nexport async function getShop(params) {\r\n  let { data } = await axios.get(baseUrl + \"/shop/shop/\" + params.id);\r\n  let res = data.data;\r\n  if (res.attr.length == 0) {\r\n    res.attr = [{}];\r\n  }\r\n  return res;\r\n}\r\nexport async function addShop(params) {\r\n  let { data } = await axios.post(baseUrl + \"/shop/add\", { ...params });\r\n  return data.data;\r\n}\r\n\r\nexport async function editShop(params) {\r\n  let { data } = await axios.post(baseUrl + \"/shop/edit\", { ...params });\r\n  return data.data;\r\n}\r\nexport async function delShop(params) {\r\n  let { data } = await axios.post(baseUrl + \"/shop/status\", { id: params.id, status: 1 });\r\n  return data.data;\r\n}\r\n\r\nexport async function reShop(params) {\r\n  let { data } = await axios.post(baseUrl + \"/shop/status\", { id: params.id, status: 0 });\r\n  return data.data;\r\n}\r\n\r\nexport async function shops(params) {\r\n  let { data } = await axios.get(baseUrl + \"/shop/list\", { params });\r\n  return data.data;\r\n}\r\n\r\nexport async function attrEdit(params) {\r\n  let { data } = await axios.post(baseUrl + \"/shop/attr/edit\", { ...params });\r\n  return data.data;\r\n}\r\n","G:\\other\\admin\\src\\components\\ShowMessage.js",["242"],"import React, { useState, useEffect } from \"react\";\r\nimport { Box, Toast } from \"gestalt\";\r\nfunction ToastExample({ message = { type: \"\", message: \"\" }, time = 2000, color = \"white\" }) {\r\n  let [showToast, setShowToast] = useState(false);\r\n  useEffect(() => {\r\n    if (message.message) {\r\n      setShowToast(true);\r\n      setTimeout(() => {\r\n        setShowToast(false);\r\n      }, time);\r\n    }\r\n  }, [message.message]);\r\n  return (\r\n    <Box\r\n      fit\r\n      dangerouslySetInlineStyle={{\r\n        __style: {\r\n          bottom: 50,\r\n          left: \"50%\",\r\n          transform: \"translateX(-50%)\",\r\n        },\r\n      }}\r\n      paddingX={1}\r\n      position=\"fixed\"\r\n    >\r\n      {showToast && <Toast text={message.message || \"\"} color={color} />}\r\n    </Box>\r\n  );\r\n}\r\nexport default ToastExample;\r\n","G:\\other\\admin\\src\\components\\Page.js",["243","244","245","246","247"],"import React from \"react\";\r\nimport { Box, ButtonGroup, Button, IconButton, Text } from \"gestalt\";\r\n\r\nfunction Header({ history, page, onChange, total_page = 0 }) {\r\n  let list = []; //Array.from(Array(total_page + 1), (v, k) => k);\r\n  for (let i = -4; i <= 4; i++) {\r\n    let current = page + i;\r\n    if (current >= 0 && current <= total_page) {\r\n      list.push(current);\r\n    }\r\n  }\r\n\r\n  if (total_page == 0) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" justifyContent=\"center\">\r\n        <ButtonGroup>\r\n          <IconButton\r\n            accessibilityLabel=\"上\"\r\n            icon=\"arrow-back\"\r\n            size=\"sm\"\r\n            color=\"transparent\"\r\n            disabled={page == 0}\r\n            onClick={(e) => {\r\n              onChange({ page: page - 1 });\r\n            }}\r\n          />\r\n          {list.map((index) => (\r\n            <Button\r\n              key={index}\r\n              text={String(index + 1)}\r\n              size=\"sm\"\r\n              color={page == index ? \"red\" : \"transparent\"}\r\n              onClick={(e) => {\r\n                onChange({ page: index });\r\n              }}\r\n            />\r\n          ))}\r\n\r\n          <IconButton\r\n            accessibilityLabel=\"下\"\r\n            icon=\"arrow-forward\"\r\n            size=\"sm\"\r\n            color=\"transparent\"\r\n            disabled={page == total_page}\r\n            onClick={(e) => {\r\n              onChange({ page: page + 1 });\r\n            }}\r\n          />\r\n        </ButtonGroup>\r\n        {/* <Text>Total:{total_page}</Text> */}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","G:\\other\\admin\\src\\components\\FormAttr.js",["248","249","250","251","252","253","254","255","256"],"import React, { useEffect, useState } from \"react\";\r\nimport { Box, TextField, IconButton, Text } from \"gestalt\";\r\nimport FormItem from \"./FormItem\";\r\nimport { useFieldArray } from \"react-hook-form\";\r\nimport ToastExample from \"./ShowMessage\";\r\n\r\nfunction FormAttr({ name, formCtx: { control, register } }) {\r\n  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray({\r\n    control,\r\n    name: name,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (fields.length == 0) {\r\n      append({});\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {fields.map(\r\n        (field, index) =>\r\n          field && (\r\n            <Box display=\"flex\" wrap key={field.id}>\r\n              <Box column={3} paddingX={3} paddingY={3}>\r\n                <FormItem com={TextField} name={`${name}[${index}].name`} defaultValue={field.name} label=\"名称\" ref={register()} />\r\n              </Box>\r\n              <Box column={2} paddingX={3} paddingY={3}>\r\n                <FormItem com={TextField} name={`${name}[${index}].value`} defaultValue={field.value} label=\"值\" type=\"number\" ref={register()} />\r\n              </Box>\r\n              <Box marginTop={9}>\r\n                <IconButton\r\n                  accessibilityLabel=\"clear\"\r\n                  icon=\"cancel\"\r\n                  onClick={(e) => {\r\n                    remove(index);\r\n                  }}\r\n                />\r\n              </Box>\r\n              <Box marginTop={9}>\r\n                <IconButton\r\n                  accessibilityLabel=\"添加\"\r\n                  icon=\"add\"\r\n                  onClick={(e) => {\r\n                    if (index == fields.length - 1) {\r\n                      append({});\r\n                    } else {\r\n                      insert(index + 1, {});\r\n                    }\r\n                  }}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          )\r\n      )}\r\n      {/* <Box marginStart={12}>\r\n        <Text>合计:{total + \"\"}</Text>\r\n      </Box> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormAttr;\r\n","G:\\other\\admin\\src\\page\\shop\\components\\ListEdit.js",["257","258","259"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Flyout, Box, Text, Button, Layer, IconButton } from \"gestalt\";\r\nimport styled from \"styled-components\";\r\nimport { useQuery } from \"../../../uitls/query\";\r\nimport { attrEdit } from \"../api\";\r\nconst NumInput = styled.input`\r\n  border: none;\r\n  background: none;\r\n  width: 80px;\r\n  color: var(--g-colorRed100);\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst ItemBox = styled.div`\r\n  display: flex;\r\n  border-bottom: 1px solid var(--g-colorGray150);\r\n`;\r\n\r\nfunction useWatch(callback, params) {\r\n  let isReady = useRef();\r\n  useEffect(() => {\r\n    if (isReady.current) {\r\n      return callback(arguments);\r\n    }\r\n    isReady.current = true;\r\n  }, params);\r\n}\r\nfunction Item({ data, onChange }) {\r\n  let [value, setValue] = useState(+data.value);\r\n  let { fetch, loading } = useQuery(attrEdit);\r\n\r\n  function setNum(value) {\r\n    let item = { ...data, value };\r\n    fetch(item, {\r\n      onSuccess: () => {\r\n        setValue(value);\r\n        onChange && onChange(item);\r\n      },\r\n    });\r\n  }\r\n  return (\r\n    <ItemBox>\r\n      <Text align=\"left\">{data.name}</Text>\r\n      <NumInput\r\n        value={value}\r\n        onChange={(e) => {\r\n          setNum(+e.target.value);\r\n        }}\r\n        type=\"number\"\r\n      />\r\n      <IconButton\r\n        accessibilityLabel=\"add\"\r\n        disabled={loading}\r\n        color=\"red\"\r\n        icon=\"add\"\r\n        size=\"xs\"\r\n        onClick={(e) => {\r\n          setNum(value + 1);\r\n        }}\r\n      />\r\n      <IconButton\r\n        accessibilityLabel=\"dash\"\r\n        disabled={loading}\r\n        color=\"red\"\r\n        icon=\"dash\"\r\n        size=\"xs\"\r\n        onClick={(e) => {\r\n          setNum(value - 1);\r\n        }}\r\n      />\r\n    </ItemBox>\r\n  );\r\n}\r\n\r\nfunction ListEdit({ num, data, onChange }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const anchorRef = React.useRef();\r\n  return (\r\n    <Box>\r\n      <Box display=\"inlineBlock\" ref={anchorRef}>\r\n        <Button accessibilityExpanded={!!open} accessibilityHaspopup onClick={() => setOpen(!open)} text={num} />\r\n      </Box>\r\n      {open && (\r\n        <Layer>\r\n          <Flyout anchor={anchorRef.current} idealDirection=\"down\" onDismiss={() => setOpen(false)} positionRelativeToAnchor={false} size=\"xl\">\r\n            <Box padding={3}>\r\n              {data?.map((item, key) => (\r\n                <Item\r\n                  data={item}\r\n                  key={item.id}\r\n                  onChange={(res) => {\r\n                    onChange && onChange(res, key);\r\n                  }}\r\n                />\r\n              ))}\r\n            </Box>\r\n          </Flyout>\r\n        </Layer>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\nexport default ListEdit;\r\n","G:\\other\\admin\\src\\components\\FileUpload.js",["260","261","262","263","264","265","266","267","268","269","270","271","272","273"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../api\";\r\nimport { getThumbSrc } from \"../uitls/tools\";\r\nimport { Button, Box, IconButton, Text } from \"gestalt\";\r\nimport syled from \"styled-components\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\n\r\nconst ImageBox = syled.div`\r\n  width:200px;\r\n  img{\r\n    width:100%;\r\n  }\r\n`;\r\n\r\nfunction FilesShow({ uploads, remove }) {\r\n  return (\r\n    <>\r\n      {Object.values(uploads).map((item) => (\r\n        <Box display=\"flex\" key={item.url}>\r\n          <Box paddingY={3}>\r\n            {item.pre}%-{item.url}\r\n          </Box>{\" \"}\r\n          {item.pre == 100 && <IconButton accessibilityLabel=\"clear\" icon=\"clear\" onClick={(e) => remove(item)} />}\r\n        </Box>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ImagesShow({ uploads, remove }) {\r\n  return (\r\n    <Box display=\"flex\" marginBottom={2} wrap>\r\n      {Object.values(uploads).map((item) => (\r\n        <Box position=\"relative\" color=\"lightGray\" margin={1} key={item.url}>\r\n          <ImageBox>\r\n            <img src={`${baseUrl}${item.url}`} />\r\n            <Box position=\"absolute\" color=\"white\" bottom={true}>\r\n              <Text size=\"sm\">\r\n                {item.pre}%-{item.url}\r\n              </Text>\r\n            </Box>\r\n          </ImageBox>\r\n          <Box position=\"absolute\" top={true} right={true}>\r\n            {item.pre == 100 && <IconButton accessibilityLabel=\"clear\" iconColor=\"white\" icon=\"clear\" onClick={(e) => remove(item)} />}\r\n          </Box>\r\n        </Box>\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction FileUpload({ name, formCtx, label, type = \"image\" }) {\r\n  const { control, register } = formCtx;\r\n  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray({\r\n    control,\r\n    name: name,\r\n  });\r\n  let fileRef = useRef();\r\n  useEffect(() => {\r\n    if (fields) {\r\n      let newUploads = [];\r\n      fields.map((field) => {\r\n        newUploads.push({ url: field.url, pre: 100 });\r\n      });\r\n    }\r\n  }, [fields]);\r\n  function uploadFile(file) {\r\n    let data = new FormData();\r\n    data.append(\"file\", file);\r\n    axios\r\n      .post(`${baseUrl}/file/uploadfile`, data, {\r\n        onUploadProgress: (e) => {\r\n          let pre = Math.floor((e.loaded / e.total) * 100);\r\n        },\r\n      })\r\n      .then(({ data }) => {\r\n        append(data.data);\r\n      });\r\n  }\r\n  function uploadFiles(files) {\r\n    console.log(files);\r\n    for (let item of files) {\r\n      uploadFile(item);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {fields.map((field, index) => {\r\n        return (\r\n          <div key={field.id} style={{ display: \"none\" }}>\r\n            <input name={`${name}[${index}].url`} defaultValue={field.url} ref={register()} />\r\n          </div>\r\n        );\r\n      })}\r\n      <Box display=\"flex\" marginBottom={2} wrap>\r\n        {fields.map((field, index) => {\r\n          return (\r\n            <Box position=\"relative\" color=\"lightGray\" margin={1} key={field.url}>\r\n              <ImageBox>\r\n                <img src={getThumbSrc(field.url)} />\r\n                <Box position=\"absolute\" color=\"white\" bottom={true}>\r\n                  <Text size=\"sm\">{field.url}</Text>\r\n                </Box>\r\n              </ImageBox>\r\n              <Box position=\"absolute\" top={true} right={true}>\r\n                <IconButton accessibilityLabel=\"clear\" iconColor=\"darkGray\" icon=\"clear\" onClick={(e) => remove(index)} />\r\n              </Box>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n      <Button\r\n        text={label || \"上传文件\"}\r\n        onClick={(e) => {\r\n          fileRef.current.click();\r\n        }}\r\n        inline\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        multiple\r\n        ref={fileRef}\r\n        style={{ display: \"none\" }}\r\n        onChange={(e) => {\r\n          uploadFiles(e.target.files);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","G:\\other\\admin\\src\\page\\system\\Web.js",["274","275","276","277","278","279","280","281"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Box, TextField, Heading, Flex, Button, Text, Spinner, Callout } from \"gestalt\";\r\nimport { getList, edit } from \"./api\";\r\nimport { useQuery, useAutoQuery } from \"../../uitls/query\";\r\nimport ShowMessage from \"../../components/ShowMessage\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../api\";\r\nimport { getImgSrc } from \"../../uitls/tools\";\r\nimport { WebCtx } from \"../../components/WebContext\";\r\nimport useDebounce from \"../../hooks/useDebounce\";\r\n\r\nfunction Item({ data, onChange }) {\r\n  if (data.type == \"Image\") {\r\n    return <ImageItem data={data} onChange={onChange} />;\r\n  } else {\r\n    return <StringItem data={data} onChange={onChange} type={data.type?.toLowerCase()} />;\r\n  }\r\n}\r\n\r\nfunction StringItem({ data, onChange, type = \"string\" }) {\r\n  let [value, setValue] = useState(data.value);\r\n  let { fetch, error, loading } = useQuery(edit);\r\n  //节流\r\n  let debounce = useDebounce((e) => {\r\n    fetch(\r\n      { ...data, value: e.value },\r\n      {\r\n        onSuccess: () => {\r\n          onChange();\r\n        },\r\n      }\r\n    );\r\n  }, 500);\r\n\r\n  return (\r\n    <Box display=\"flex\" wrap>\r\n      <Box flex=\"grow\" paddingX={3} paddingY={3}>\r\n        <TextField\r\n          name={data.name}\r\n          label={data.name}\r\n          id={data.name}\r\n          onChange={(e) => {\r\n            setValue(e.value);\r\n            debounce(e);\r\n          }}\r\n          value={value}\r\n          helperText={data.note}\r\n          type={type}\r\n        />\r\n        <Spinner show={loading} accessibilityLabel=\"Example spinner\" />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction ImageItem({ data, onChange }) {\r\n  let [image, setImage] = useState(data.value);\r\n  let { fetch, error, loading } = useQuery(edit);\r\n\r\n  function uploadFile(file) {\r\n    let postData = new FormData();\r\n    postData.append(\"file\", file);\r\n    axios\r\n      .post(`${baseUrl}/file/uploadfile`, postData, {\r\n        onUploadProgress: (e) => {\r\n          let pre = Math.floor((e.loaded / e.total) * 100);\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let url = res.data.data.url;\r\n        fetch(\r\n          {\r\n            ...data,\r\n            value: url,\r\n          },\r\n          {\r\n            onSuccess: (msg, res) => {\r\n              setImage(url);\r\n              onChange();\r\n            },\r\n          }\r\n        );\r\n      });\r\n  }\r\n  function uploadFiles(files) {\r\n    for (let item of files) {\r\n      uploadFile(item);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box display=\"flex\" wrap>\r\n      <Box flex=\"grow\" paddingX={3} paddingY={3}>\r\n        <Text size=\"sm\">{data.name}</Text>\r\n        <img src={getImgSrc(image)} height={50} width={50} alt={data.not} />\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => {\r\n            uploadFiles(e.target.files);\r\n          }}\r\n        />\r\n        <Text size=\"sm\">{data.note}</Text>\r\n        <Spinner show={loading} size=\"sm\" accessibilityLabel=\"Example spinner\" />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction Web(props) {\r\n  let [message, setMessage] = useState(\"\");\r\n  let { data, error, loading } = useAutoQuery(getList);\r\n  let webCtx = useContext(WebCtx);\r\n  return (\r\n    <Box padding={3}>\r\n      <Flex justifyContent=\"center\">\r\n        <Box direction=\"column\" display=\"flex\" maxWidth={1200} width=\"100%\" wrap>\r\n          <Box flex=\"grow\" paddingX={3} paddingY={3}>\r\n            <Heading accessibilityLevel={2} size=\"md\">\r\n              网站设置\r\n            </Heading>\r\n          </Box>\r\n          <ShowMessage message={message} />\r\n          <Box paddingX={1} paddingY={1}>\r\n            {error && <Callout type=\"error\" iconAccessibilityLabel=\"Error icon\" message={error} />}\r\n          </Box>\r\n          {data.list?.map((item) => (\r\n            <Item\r\n              key={item.id}\r\n              data={item}\r\n              onChange={(e) => {\r\n                webCtx.update();\r\n              }}\r\n            />\r\n          ))}\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\nexport default Web;\r\n","G:\\other\\admin\\src\\page\\system\\api.js",[],"G:\\other\\admin\\src\\components\\WebContext.js",["282"],"import React, { createContext } from \"react\";\r\nexport const WebCtx = createContext();\r\n","G:\\other\\admin\\src\\hooks\\useDebounce.js",["283","284","285","286","287","288"],"import React, { useEffect, useState, useContext, useRef, useCallback } from \"react\";\r\nfunction useDebounce(fn, delay, dep = []) {\r\n  const { current } = useRef({ fn, timer: null });\r\n  useEffect(\r\n    function () {\r\n      current.fn = fn;\r\n    },\r\n    [fn]\r\n  );\r\n\r\n  return useCallback(function f(...args) {\r\n    if (current.timer) {\r\n      clearTimeout(current.timer);\r\n    }\r\n    current.timer = setTimeout(() => {\r\n      current.fn.call(this, ...args);\r\n    }, delay);\r\n  }, dep);\r\n}\r\n\r\nexport default useDebounce;\r\n","G:\\other\\admin\\src\\components\\Edit.js",["289"],"G:\\other\\admin\\src\\page\\home\\Home.js",["290","291"],"G:\\other\\admin\\src\\page\\home\\api.js",["292"],"G:\\other\\admin\\src\\page\\home\\components\\UserTable.js",[],"G:\\other\\admin\\src\\page\\home\\components\\IndexCard.js",[],"G:\\other\\admin\\src\\page\\home\\components\\HeightUserTable.js",["293","294","295","296"],"import { Text, Table, Spinner, Box } from \"gestalt\";\r\nimport { useAutoQuery, useQuery } from \"../../../uitls/query\";\r\nimport { heightUser, delUser } from \"../api\";\r\nimport AskButton from \"../../../components/AskButton\";\r\nimport React, { useState } from \"react\";\r\nimport ShowMessage from \"../../../components/ShowMessage\";\r\nimport TableLoading from \"../../../components/TableLoading\";\r\n\r\nimport dayjs from \"dayjs\";\r\nrequire(\"dayjs/locale/zh-cn\");\r\nvar utc = require(\"dayjs/plugin/utc\");\r\nvar relativeTime = require(\"dayjs/plugin/relativeTime\");\r\ndayjs.extend(utc);\r\ndayjs.extend(relativeTime);\r\ndayjs.locale(\"zh-cn\");\r\n\r\nfunction TableCom({ condition }) {\r\n  let [message, setMessage] = useState(\"\");\r\n  let {\r\n    data: { list },\r\n    update,\r\n    loading,\r\n  } = useAutoQuery(heightUser, condition);\r\n  let { fetch } = useQuery(delUser, null, {\r\n    onSuccess: (msg, data) => {\r\n      setMessage(data.message);\r\n      update();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Box position=\"relative\">\r\n      <TableLoading loading={loading} update={update} />\r\n      <ShowMessage message={{ message }} time={10000} color=\"red\" />\r\n      <Table>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>\r\n              <Text weight=\"bold\">用户</Text>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell>\r\n              <Text weight=\"bold\">到期时间</Text>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell>\r\n              <Text weight=\"bold\">解析次数</Text>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell>\r\n              <Text weight=\"bold\">登录次数</Text>\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell>\r\n              <Text weight=\"bold\">操作</Text>\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {list?.map((item) => {\r\n            return (\r\n              <Table.Row key={item.id}>\r\n                <Table.Cell>\r\n                  <Text>{item.name}</Text>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Text>{dayjs.utc(item.duedate).local().fromNow(true)}</Text>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Text>{item.parse_num}</Text>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Text>{item.signin_num}</Text>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  {item.status == 0 && (\r\n                    <Box marginTop={-2} marginBottom={-2}>\r\n                      <AskButton\r\n                        text=\"封号\"\r\n                        size={\"sm\"}\r\n                        title=\"是否禁封用户？\"\r\n                        content=\"该用户将无法使用！\"\r\n                        onConfirm={(e) => {\r\n                          fetch({ id: item.id });\r\n                        }}\r\n                      />\r\n                    </Box>\r\n                  )}\r\n                  {item.status == 1 && <Text>已注销</Text>}\r\n                  {item.status == 2 && <Text color=\"red\">已禁封</Text>}\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default TableCom;\r\n","G:\\other\\admin\\src\\page\\home\\components\\CookiesTable.js",["297"],"import { Text, Table, Button, Box, Spinner, Heading } from \"gestalt\";\r\nimport { useAutoQuery, useQuery } from \"../../../uitls/query\";\r\nimport { cookies, resetError } from \"../api\";\r\nimport dayjs from \"dayjs\";\r\nimport TableLoading from \"../../../components/TableLoading\";\r\nrequire(\"dayjs/locale/zh-cn\");\r\nvar utc = require(\"dayjs/plugin/utc\");\r\nvar relativeTime = require(\"dayjs/plugin/relativeTime\");\r\ndayjs.extend(utc);\r\ndayjs.extend(relativeTime);\r\ndayjs.locale(\"zh-cn\");\r\n\r\nfunction TableCom({ condition }) {\r\n  let {\r\n    data: { list },\r\n    update,\r\n    loading,\r\n  } = useAutoQuery(cookies, condition);\r\n\r\n  let { fetch: resetErrorFetch, loading: resetErrorLoading } = useQuery(\r\n    resetError,\r\n    {},\r\n    {\r\n      onSuccess: () => {\r\n        update();\r\n      },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" justifyContent=\"between\" alignItems=\"center\">\r\n        <Heading size=\"sm\">Cookies</Heading>\r\n        <Box margin={2}>\r\n          <Button\r\n            size=\"sm\"\r\n            text=\"重置错误次数\"\r\n            inline\r\n            onClick={(e) => {\r\n              resetErrorFetch();\r\n            }}\r\n            disabled={resetErrorLoading}\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <Box height=\"300px\" overflow=\"scrollY\">\r\n        <Box position=\"relative\">\r\n          <TableLoading loading={loading} update={update} />\r\n          <Table>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell>\r\n                  <Text weight=\"bold\">ID</Text>\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell>\r\n                  <Text weight=\"bold\">账号</Text>\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell>\r\n                  <Text weight=\"bold\">使用次数</Text>\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell>\r\n                  <Text weight=\"bold\">错误次数</Text>\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell>\r\n                  <Text weight=\"bold\">更新时间</Text>\r\n                </Table.HeaderCell>\r\n                {/* <Table.HeaderCell>\r\n                  <Text weight=\"bold\">操作</Text>\r\n                </Table.HeaderCell> */}\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              {list?.map((item) => {\r\n                return (\r\n                  <Table.Row key={item.id}>\r\n                    <Table.Cell>\r\n                      <Box width=\"200px\">\r\n                        <Text truncate>{item.id}</Text>\r\n                      </Box>\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <Text>{item.name}</Text>\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <Text>{item.use_number}</Text>\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <Text>{item.error_number}</Text>\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <Text>{dayjs(item.update_time).fromNow()}</Text>\r\n                    </Table.Cell>\r\n                    {/* <Table.Cell>{item.error_number >= 10 && <Button text=\"启用\" size=\"sm\" onClick={(e) => {\r\n\r\n                    }} />}</Table.Cell> */}\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default TableCom;\r\n","G:\\other\\admin\\src\\page\\home\\components\\NewUserTable.js",["298","299","300","301"],"import { useEffect, useState } from \"react\";\r\nimport { Text, Table, Box, Heading, IconButton, SearchField } from \"gestalt\";\r\nimport { useAutoQuery } from \"../../../uitls/query\";\r\nimport { userStatus } from \"../../../uitls/tools\";\r\nimport { newUser } from \"../api\";\r\nimport dayjs from \"dayjs\";\r\nimport Page from \"../../../components/Page\";\r\nimport TableLoading from \"../../../components/TableLoading\";\r\nimport useDebounce from \"../../../hooks/useDebounce\";\r\nimport UserInfo from \"./UserInfo\";\r\nrequire(\"dayjs/locale/zh-cn\");\r\nvar utc = require(\"dayjs/plugin/utc\");\r\nvar relativeTime = require(\"dayjs/plugin/relativeTime\");\r\ndayjs.extend(utc);\r\ndayjs.extend(relativeTime);\r\ndayjs.locale(\"zh-cn\");\r\n\r\nfunction useDebounceState(changeValue) {\r\n  let [value, setValue] = useState(changeValue);\r\n  //节流\r\n  let debounce = useDebounce((v) => {\r\n    setValue(v);\r\n  }, 500);\r\n  useEffect(() => {\r\n    debounce(changeValue);\r\n  }, [changeValue]);\r\n  return value;\r\n}\r\n\r\nfunction TableCom() {\r\n  let [keyword, setKeyword] = useState(\"\");\r\n  let search = useDebounceState(keyword);\r\n  let {\r\n    data: { list, page, total_page, page_size },\r\n    update,\r\n    fetchMore,\r\n    loading,\r\n  } = useAutoQuery(newUser, { keyword: search, page_size: 8 });\r\n  let typeName = [\"用户\", \"代理\"];\r\n  let stateName = [\"正常\", \"已注销\", \"已封号\"];\r\n\r\n  return (\r\n    <Box position=\"relative\">\r\n      <Box display=\"flex\" justifyContent=\"between\">\r\n        <Heading size=\"sm\">最新增加会员</Heading>\r\n        <Box display=\"flex\">\r\n          <SearchField accessibilityLabel=\"通过用户名或兑换码搜索\" id=\"searchField\" onChange={({ value }) => setKeyword(value)} placeholder=\"搜索用户名/兑换码\" value={keyword} />\r\n          <TableLoading loading={loading} update={update} isFix={false} />\r\n        </Box>\r\n      </Box>\r\n      <Box>\r\n        <Box>\r\n          <Table>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell>\r\n                  <Text weight=\"bold\">用户</Text>\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell>\r\n                  <Text weight=\"bold\">兑换码</Text>\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell>\r\n                  <Text weight=\"bold\">类型</Text>\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell>\r\n                  <Text weight=\"bold\">备注</Text>\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell>\r\n                  <Text weight=\"bold\">状态</Text>\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell>\r\n                  <Text weight=\"bold\">注册时间</Text>\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell>\r\n                  <Text weight=\"bold\">到期时间</Text>\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell>\r\n                  <Text weight=\"bold\">操作</Text>\r\n                </Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              {list?.map((item, key) => {\r\n                return (\r\n                  item.name && (\r\n                    <Table.Row key={key}>\r\n                      <Table.Cell>\r\n                        <Text>{item.name}</Text>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <Text>{item.code}</Text>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <Text color={item.type == 0 ? \"darkGray\" : \"red\"}>{typeName[item.type]}</Text>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <Text>{item.remarks}</Text>\r\n                      </Table.Cell>\r\n                      <Table.Cell>{userStatus(item.status)}</Table.Cell>\r\n                      <Table.Cell>\r\n                        <Text>{dayjs.utc(item.add_time).local().fromNow()}</Text>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <Text>{dayjs.utc(item.duedate).local().fromNow(true)}</Text>\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        <UserInfo id={item.id} show={true} />\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                  )\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n          <Page page={page} page_size={page_size} total_page={total_page} onChange={fetchMore} />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default TableCom;\r\n","G:\\other\\admin\\src\\components\\AskButton.js",["302"],"import { useState } from \"react\";\r\nimport { Box, Layer, ButtonGroup, Modal, Text, Button } from \"gestalt\";\r\n\r\nfunction AskButton({ title = \"确定删除？\", content = \"删除后将无法恢复！\", onCancel, onConfirm, ...buttonProps }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  function handleConcel() {\r\n    if (onCancel) onCancel();\r\n    setShowModal(false);\r\n  }\r\n  return (\r\n    <Box>\r\n      <Button\r\n        {...buttonProps}\r\n        onClick={(e) => {\r\n          setShowModal(true);\r\n          if (buttonProps.onClick) buttonProps.onClick(e);\r\n        }}\r\n      />\r\n      {showModal && (\r\n        <Layer>\r\n          <Modal\r\n            accessibilityModalLabel={content}\r\n            heading={title}\r\n            size=\"sm\"\r\n            onDismiss={() => {\r\n              handleConcel();\r\n            }}\r\n            footer={\r\n              <Box display=\"flex\" justifyContent=\"center\">\r\n                <ButtonGroup>\r\n                  <Button\r\n                    size=\"lg\"\r\n                    text=\"取 消\"\r\n                    onClick={() => {\r\n                      handleConcel();\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    size=\"lg\"\r\n                    color=\"red\"\r\n                    text=\"确 定\"\r\n                    onClick={() => {\r\n                      if (onConfirm) onConfirm();\r\n                      setShowModal(!showModal);\r\n                    }}\r\n                  />\r\n                </ButtonGroup>\r\n              </Box>\r\n            }\r\n            role=\"alertdialog\"\r\n            size=\"sm\"\r\n          >\r\n            <Box paddingX={8}>\r\n              <Text align=\"center\">{content}</Text>\r\n            </Box>\r\n          </Modal>\r\n        </Layer>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AskButton;\r\n","G:\\other\\admin\\src\\page\\home\\components\\DelCode.js",["303","304","305"],"import React, { useState } from \"react\";\r\nimport { Box, Heading, Column, Text, TextArea } from \"gestalt\";\r\nimport ShowMessage from \"../../../components/ShowMessage\";\r\nimport AskButton from \"../../../components/AskButton\";\r\nimport { useQuery } from \"../../../uitls/query\";\r\nimport { delCode } from \"../api\";\r\n\r\nfunction DelCode() {\r\n  let [message, setMessage] = useState(\"\");\r\n  let { fetch, loading } = useQuery(delCode, null, {\r\n    onSuccess: (msg, data) => {\r\n      setMessage(data.message);\r\n    },\r\n  });\r\n  let [codes, setCodes] = useState();\r\n  return (\r\n    <Box>\r\n      <ShowMessage message={{ message }} time={10000} color=\"red\" />\r\n      <Text size=\"sm\" color=\"gray\">\r\n        每个兑换码使用单独一行\r\n      </Text>\r\n      <Box width=\"100%\" height={300} marginEnd={1}>\r\n        <TextArea id=\"codes\" onChange={(e) => setCodes(e.value)} value={codes} rows={10} />\r\n      </Box>\r\n      <AskButton\r\n        text=\"注销\"\r\n        title=\"确定注销该兑换码？\"\r\n        content=\"注销兑换码会连同绑定用户一起注销。\"\r\n        onConfirm={(e) => {\r\n          if (codes) {\r\n            let list = codes.split(\"\\n\").map((item) => item.trim());\r\n            fetch({ list });\r\n          }\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DelCode;\r\n","G:\\other\\admin\\src\\page\\home\\components\\CreateCode.js",["306","307"],"import React, { useState } from \"react\";\r\nimport { Box, Button, SelectList, Text, RadioButton, TextField, Column } from \"gestalt\";\r\nimport ShowMessage from \"../../../components/ShowMessage\";\r\nimport { baseUrl } from \"../../../api\";\r\n\r\nfunction SelectType({ value, setValue }) {\r\n  return (\r\n    <Box display=\"flex\" direction=\"column\">\r\n      <Text size=\"sm\">类型</Text>\r\n      <Box paddingY={1}>\r\n        <RadioButton checked={value === \"0\"} id=\"favoriteDog\" label=\"用户\" name=\"favorite\" onChange={() => setValue(\"0\")} value={\"0\"} />\r\n      </Box>\r\n      <Box paddingY={1}>\r\n        <RadioButton checked={value === \"1\"} id=\"favoriteCat\" label=\"代理\" name=\"favorite\" onChange={() => setValue(\"1\")} value={\"1\"} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction DelCode() {\r\n  let [message, setMessage] = useState(\"\");\r\n  let [day, setDay] = useState(\"7\");\r\n  let [num, setNum] = useState(\"20\");\r\n  let [remarks, setRemarks] = useState(\"\");\r\n  let [type, setType] = useState(\"0\");\r\n  console.log(type);\r\n  return (\r\n    <Box>\r\n      <ShowMessage message={{ message }} time={10000} color=\"red\" />\r\n\r\n      <SelectList\r\n        id=\"selectlistexample10\"\r\n        onChange={(e) => {\r\n          setDay(+e.value);\r\n        }}\r\n        options={[\r\n          { label: \"7天\", value: \"7\" },\r\n          { label: \"一个月\", value: \"30\" },\r\n          { label: \"一季度\", value: \"92\" },\r\n          { label: \"一年\", value: \"365\" },\r\n          { label: \"终身\", value: \"36500\" },\r\n        ]}\r\n        size=\"lg\"\r\n        label=\"时长\"\r\n      />\r\n      <Box marginTop={2}>\r\n        <TextField id=\"num\" label=\"数量\" type=\"number\" value={num} onChange={(e) => setNum(e.value)} />\r\n      </Box>\r\n      <Box marginTop={2}>\r\n        <SelectType value={type} setValue={setType} />\r\n      </Box>\r\n      <Box marginTop={2}>\r\n        <TextField id=\"remarks\" label=\"备注\" value={remarks} onChange={(e) => setRemarks(e.value)} />\r\n      </Box>\r\n      <Box marginTop={2}>\r\n        <Button text=\"生成\" inline role=\"link\" href={baseUrl + `/user/new_code?day=${day}&num=${num}&type=${type}&remarks=${remarks}`} target=\"blank\" />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DelCode;\r\n","G:\\other\\admin\\src\\components\\TableLoading.js",[],"G:\\other\\admin\\src\\page\\home\\components\\UserInfo.js",["308","309","310","311","312","313","314","315","316"],"import { useState } from \"react\";\r\nimport { Box, Button, Layer, Heading, Table, IconButton, Modal, ButtonGroup, Text } from \"gestalt\";\r\nimport AskButton from \"../../../components/AskButton\";\r\nimport { delUser, getUserInfo, delCode } from \"../api\";\r\nimport { useQuery, useAutoQuery } from \"../../../uitls/query\";\r\nimport ShowMessage from \"../../../components/ShowMessage\";\r\nimport { formatTime, userStatus } from \"../../../uitls/tools\";\r\n\r\nfunction UserInfo({ id, onCancel }) {\r\n  let [message, setMessage] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  let { data, loading, update } = useAutoQuery(getUserInfo, { id }, { stop: !showModal });\r\n\r\n  let { fetch } = useQuery(delUser, null, {\r\n    onSuccess: (msg, data) => {\r\n      setMessage(data.message);\r\n      update();\r\n    },\r\n  });\r\n\r\n  let { fetch: delCodeFetch, loading: delCodeLoading } = useQuery(delCode, null, {\r\n    onSuccess: (msg, data) => {\r\n      setMessage(data.message);\r\n      update();\r\n    },\r\n  });\r\n\r\n  function handleConcel() {\r\n    if (onCancel) onCancel();\r\n    setShowModal(false);\r\n  }\r\n\r\n  return (\r\n    <Box marginStart={-1} marginEnd={-1}>\r\n      <Box marginTop={-2} marginBottom={-2}>\r\n        <IconButton\r\n          accessibilityLabel=\"edit\"\r\n          icon=\"edit\"\r\n          size=\"sm\"\r\n          onClick={() => {\r\n            setShowModal(true);\r\n          }}\r\n        />\r\n        {showModal && (\r\n          <Layer>\r\n            <Modal\r\n              accessibilityModalLabel=\"用户详细信息\"\r\n              heading=\"用户信息\"\r\n              onDismiss={() => {\r\n                handleConcel();\r\n              }}\r\n              size=\"lg\"\r\n            >\r\n              <Box padding={8}>\r\n                <ShowMessage message={{ message }} time={10000} color=\"red\" />\r\n                <Box display=\"flex\">\r\n                  <Text>账号: </Text>\r\n                  <Text>{data.name}</Text>\r\n                </Box>\r\n\r\n                <CodeTable list={data.codes} />\r\n\r\n                <Box display=\"flex\">\r\n                  <Text>类型: {data.codes && data.codes[0]?.day}</Text>\r\n                </Box>\r\n\r\n                <Box display=\"flex\">\r\n                  <Text>状态:</Text>\r\n                  <Text>{userStatus(data.status)}</Text>\r\n                </Box>\r\n                <Box display=\"flex\">\r\n                  <Text>注册时间:</Text>\r\n                  <Text>{formatTime(data.add_time)}</Text>\r\n                </Box>\r\n                <Box display=\"flex\">\r\n                  <Text>到期时间:</Text>\r\n                  <Text>{formatTime(data.duedate)}</Text>\r\n                </Box>\r\n                <Box display=\"flex\">\r\n                  <Text>今日登录:</Text>\r\n                  <Text>{data.day_signins?.num}</Text>\r\n                </Box>\r\n                <Box display=\"flex\">\r\n                  <Text>今日解析:</Text>\r\n                  <Text>{data.day_parses?.num}</Text>\r\n                </Box>\r\n                <Box display=\"flex\">\r\n                  <Text>总登录:</Text>\r\n                  <Text>{data.signins?.num}</Text>\r\n                </Box>\r\n\r\n                <Box display=\"flex\">\r\n                  <Text>总解析:</Text>\r\n                  <Text>{data.parses?.num}</Text>\r\n                </Box>\r\n                <Box marginTop={2}>\r\n                  {data.status == 0 && (\r\n                    <AskButton\r\n                      text=\"封 号\"\r\n                      size={\"md\"}\r\n                      title=\"是否禁封用户？\"\r\n                      content=\"该用户将无法使用！\"\r\n                      onConfirm={(e) => {\r\n                        fetch({ id: data.id });\r\n                      }}\r\n                    />\r\n                  )}\r\n                  {data.status == 1 && <Text>已注销</Text>}\r\n                  {data.status == 2 && <Text color=\"red\">已禁封</Text>}\r\n                </Box>\r\n                <Box marginTop={2}>\r\n                  {data.status == 0 && (\r\n                    <AskButton\r\n                      text=\"注 销\"\r\n                      size={\"md\"}\r\n                      title=\"是否注销用户？\"\r\n                      content=\"该用户将无法使用！\"\r\n                      onConfirm={(e) => {\r\n                        let code = data.codes && data.codes[0].code;\r\n                        if (code) {\r\n                          delCodeFetch({ list: [code] });\r\n                        }\r\n                      }}\r\n                    />\r\n                  )}\r\n                </Box>\r\n                <Box marginTop={2}>\r\n                  <Button\r\n                    text=\"取 消\"\r\n                    color=\"red\"\r\n                    onClick={() => {\r\n                      handleConcel();\r\n                    }}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n            </Modal>\r\n          </Layer>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction CodeTable({ list }) {\r\n  return (\r\n    <Table>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>\r\n            <Text weight=\"bold\">兑换码</Text>\r\n          </Table.HeaderCell>\r\n          <Table.HeaderCell>\r\n            <Text weight=\"bold\">类型</Text>\r\n          </Table.HeaderCell>\r\n          <Table.HeaderCell>\r\n            <Text weight=\"bold\">兑换时间</Text>\r\n          </Table.HeaderCell>\r\n          <Table.HeaderCell>\r\n            <Text weight=\"bold\">生成时间</Text>\r\n          </Table.HeaderCell>\r\n          <Table.HeaderCell>\r\n            <Text weight=\"bold\">备注</Text>\r\n          </Table.HeaderCell>\r\n          <Table.HeaderCell>\r\n            <Text weight=\"bold\">状态</Text>\r\n          </Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n      <Table.Body>\r\n        {list?.map((item) => (\r\n          <Table.Row key={item.id}>\r\n            <Table.Cell>\r\n              <Text>{item.code}</Text>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n              <Text>{item.day}</Text>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n              <Text>{formatTime(item.use_time)}</Text>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n              <Text>{formatTime(item.add_time)}</Text>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n              <Text>{item.remarks}</Text>\r\n            </Table.Cell>\r\n            <Table.Cell>\r\n              <Text>{item.status == 1 ? \"注销\" : \"正常\"}</Text>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        ))}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default UserInfo;\r\n","G:\\other\\admin\\src\\page\\home\\components\\UseCodeTable.js",["317","318","319","320"],{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","severity":1,"message":"326","line":14,"column":35,"nodeType":"327","messageId":"328","endLine":14,"endColumn":41},{"ruleId":"325","severity":1,"message":"329","line":1,"column":17,"nodeType":"327","messageId":"328","endLine":1,"endColumn":25},{"ruleId":"325","severity":1,"message":"330","line":1,"column":27,"nodeType":"327","messageId":"328","endLine":1,"endColumn":36},{"ruleId":"325","severity":1,"message":"331","line":1,"column":38,"nodeType":"327","messageId":"328","endLine":1,"endColumn":44},{"ruleId":"325","severity":1,"message":"332","line":3,"column":25,"nodeType":"327","messageId":"328","endLine":3,"endColumn":29},{"ruleId":"325","severity":1,"message":"333","line":15,"column":23,"nodeType":"327","messageId":"328","endLine":15,"endColumn":30},{"ruleId":"334","severity":1,"message":"335","line":2,"column":45,"nodeType":"336","messageId":"337","endLine":2,"endColumn":47},{"ruleId":"325","severity":1,"message":"338","line":4,"column":8,"nodeType":"327","messageId":"328","endLine":4,"endColumn":18},{"ruleId":"334","severity":1,"message":"335","line":7,"column":16,"nodeType":"336","messageId":"337","endLine":7,"endColumn":18},{"ruleId":"334","severity":1,"message":"335","line":9,"column":23,"nodeType":"336","messageId":"337","endLine":9,"endColumn":25},{"ruleId":"334","severity":1,"message":"335","line":14,"column":16,"nodeType":"336","messageId":"337","endLine":14,"endColumn":18},{"ruleId":"334","severity":1,"message":"335","line":16,"column":23,"nodeType":"336","messageId":"337","endLine":16,"endColumn":25},{"ruleId":"334","severity":1,"message":"335","line":21,"column":16,"nodeType":"336","messageId":"337","endLine":21,"endColumn":18},{"ruleId":"334","severity":1,"message":"335","line":23,"column":23,"nodeType":"336","messageId":"337","endLine":23,"endColumn":25},{"ruleId":"334","severity":1,"message":"335","line":28,"column":16,"nodeType":"336","messageId":"337","endLine":28,"endColumn":18},{"ruleId":"334","severity":1,"message":"335","line":30,"column":23,"nodeType":"336","messageId":"337","endLine":30,"endColumn":25},{"ruleId":"334","severity":1,"message":"335","line":140,"column":89,"nodeType":"336","messageId":"337","endLine":140,"endColumn":91},{"ruleId":"339","severity":1,"message":"340","line":153,"column":6,"nodeType":"341","endLine":153,"endColumn":73},{"ruleId":"339","severity":1,"message":"342","line":153,"column":6,"nodeType":"341","endLine":153,"endColumn":73,"suggestions":"343"},{"ruleId":"325","severity":1,"message":"344","line":2,"column":15,"nodeType":"327","messageId":"328","endLine":2,"endColumn":19},{"ruleId":"325","severity":1,"message":"345","line":2,"column":72,"nodeType":"327","messageId":"328","endLine":2,"endColumn":83},{"ruleId":"325","severity":1,"message":"346","line":7,"column":10,"nodeType":"327","messageId":"328","endLine":7,"endColumn":15},{"ruleId":"325","severity":1,"message":"347","line":7,"column":17,"nodeType":"327","messageId":"328","endLine":7,"endColumn":25},{"ruleId":"348","severity":1,"message":"349","line":13,"column":11,"nodeType":"350","endLine":13,"endColumn":67},{"ruleId":"325","severity":1,"message":"351","line":1,"column":8,"nodeType":"327","messageId":"328","endLine":1,"endColumn":13},{"ruleId":"325","severity":1,"message":"330","line":1,"column":17,"nodeType":"327","messageId":"328","endLine":1,"endColumn":26},{"ruleId":"325","severity":1,"message":"338","line":4,"column":8,"nodeType":"327","messageId":"328","endLine":4,"endColumn":18},{"ruleId":"334","severity":1,"message":"335","line":25,"column":44,"nodeType":"336","messageId":"337","endLine":25,"endColumn":46},{"ruleId":"352","severity":1,"message":"353","line":46,"column":47,"nodeType":"354","messageId":"355","endLine":46,"endColumn":48,"suggestions":"356"},{"ruleId":"325","severity":1,"message":"357","line":6,"column":10,"nodeType":"327","messageId":"328","endLine":6,"endColumn":19},{"ruleId":"334","severity":1,"message":"335","line":19,"column":41,"nodeType":"336","messageId":"337","endLine":19,"endColumn":43},{"ruleId":"325","severity":1,"message":"330","line":1,"column":17,"nodeType":"327","messageId":"328","endLine":1,"endColumn":26},{"ruleId":"325","severity":1,"message":"358","line":5,"column":19,"nodeType":"327","messageId":"328","endLine":5,"endColumn":32},{"ruleId":"334","severity":1,"message":"335","line":89,"column":28,"nodeType":"336","messageId":"337","endLine":89,"endColumn":30},{"ruleId":"334","severity":1,"message":"359","line":11,"column":22,"nodeType":"336","messageId":"337","endLine":11,"endColumn":24},{"ruleId":"334","severity":1,"message":"335","line":16,"column":56,"nodeType":"336","messageId":"337","endLine":16,"endColumn":58},{"ruleId":"334","severity":1,"message":"335","line":7,"column":23,"nodeType":"336","messageId":"337","endLine":7,"endColumn":25},{"ruleId":"339","severity":1,"message":"360","line":12,"column":6,"nodeType":"361","endLine":12,"endColumn":23,"suggestions":"362"},{"ruleId":"325","severity":1,"message":"363","line":2,"column":48,"nodeType":"327","messageId":"328","endLine":2,"endColumn":52},{"ruleId":"334","severity":1,"message":"335","line":13,"column":18,"nodeType":"336","messageId":"337","endLine":13,"endColumn":20},{"ruleId":"334","severity":1,"message":"335","line":26,"column":28,"nodeType":"336","messageId":"337","endLine":26,"endColumn":30},{"ruleId":"334","severity":1,"message":"335","line":36,"column":27,"nodeType":"336","messageId":"337","endLine":36,"endColumn":29},{"ruleId":"334","severity":1,"message":"335","line":48,"column":28,"nodeType":"336","messageId":"337","endLine":48,"endColumn":30},{"ruleId":"325","severity":1,"message":"329","line":1,"column":28,"nodeType":"327","messageId":"328","endLine":1,"endColumn":36},{"ruleId":"325","severity":1,"message":"363","line":2,"column":38,"nodeType":"327","messageId":"328","endLine":2,"endColumn":42},{"ruleId":"325","severity":1,"message":"364","line":5,"column":8,"nodeType":"327","messageId":"328","endLine":5,"endColumn":20},{"ruleId":"325","severity":1,"message":"365","line":8,"column":27,"nodeType":"327","messageId":"328","endLine":8,"endColumn":34},{"ruleId":"325","severity":1,"message":"366","line":8,"column":44,"nodeType":"327","messageId":"328","endLine":8,"endColumn":48},{"ruleId":"325","severity":1,"message":"367","line":8,"column":50,"nodeType":"327","messageId":"328","endLine":8,"endColumn":54},{"ruleId":"334","severity":1,"message":"335","line":14,"column":23,"nodeType":"336","messageId":"337","endLine":14,"endColumn":25},{"ruleId":"339","severity":1,"message":"368","line":17,"column":6,"nodeType":"361","endLine":17,"endColumn":8,"suggestions":"369"},{"ruleId":"334","severity":1,"message":"335","line":45,"column":31,"nodeType":"336","messageId":"337","endLine":45,"endColumn":33},{"ruleId":"325","severity":1,"message":"370","line":19,"column":10,"nodeType":"327","messageId":"328","endLine":19,"endColumn":18},{"ruleId":"339","severity":1,"message":"340","line":26,"column":6,"nodeType":"327","endLine":26,"endColumn":12},{"ruleId":"339","severity":1,"message":"371","line":26,"column":6,"nodeType":"327","endLine":26,"endColumn":12,"suggestions":"372"},{"ruleId":"325","severity":1,"message":"329","line":1,"column":25,"nodeType":"327","messageId":"328","endLine":1,"endColumn":33},{"ruleId":"325","severity":1,"message":"373","line":7,"column":10,"nodeType":"327","messageId":"328","endLine":7,"endColumn":17},{"ruleId":"325","severity":1,"message":"374","line":16,"column":10,"nodeType":"327","messageId":"328","endLine":16,"endColumn":19},{"ruleId":"334","severity":1,"message":"335","line":24,"column":21,"nodeType":"336","messageId":"337","endLine":24,"endColumn":23},{"ruleId":"325","severity":1,"message":"375","line":31,"column":10,"nodeType":"327","messageId":"328","endLine":31,"endColumn":20},{"ruleId":"348","severity":1,"message":"349","line":37,"column":13,"nodeType":"350","endLine":37,"endColumn":50},{"ruleId":"334","severity":1,"message":"335","line":45,"column":23,"nodeType":"336","messageId":"337","endLine":45,"endColumn":25},{"ruleId":"325","severity":1,"message":"365","line":55,"column":27,"nodeType":"327","messageId":"328","endLine":55,"endColumn":34},{"ruleId":"325","severity":1,"message":"366","line":55,"column":44,"nodeType":"327","messageId":"328","endLine":55,"endColumn":48},{"ruleId":"325","severity":1,"message":"367","line":55,"column":50,"nodeType":"327","messageId":"328","endLine":55,"endColumn":54},{"ruleId":"325","severity":1,"message":"376","line":55,"column":56,"nodeType":"327","messageId":"328","endLine":55,"endColumn":62},{"ruleId":"377","severity":1,"message":"378","line":63,"column":26,"nodeType":"379","messageId":"380","endLine":63,"endColumn":28},{"ruleId":"325","severity":1,"message":"381","line":74,"column":15,"nodeType":"327","messageId":"328","endLine":74,"endColumn":18},{"ruleId":"348","severity":1,"message":"349","line":102,"column":17,"nodeType":"350","endLine":102,"endColumn":53},{"ruleId":"325","severity":1,"message":"330","line":1,"column":17,"nodeType":"327","messageId":"328","endLine":1,"endColumn":26},{"ruleId":"325","severity":1,"message":"382","line":2,"column":41,"nodeType":"327","messageId":"328","endLine":2,"endColumn":47},{"ruleId":"334","severity":1,"message":"335","line":13,"column":17,"nodeType":"336","messageId":"337","endLine":13,"endColumn":19},{"ruleId":"325","severity":1,"message":"383","line":22,"column":16,"nodeType":"327","messageId":"328","endLine":22,"endColumn":21},{"ruleId":"325","severity":1,"message":"383","line":58,"column":16,"nodeType":"327","messageId":"328","endLine":58,"endColumn":21},{"ruleId":"325","severity":1,"message":"381","line":66,"column":15,"nodeType":"327","messageId":"328","endLine":66,"endColumn":18},{"ruleId":"325","severity":1,"message":"384","line":110,"column":17,"nodeType":"327","messageId":"328","endLine":110,"endColumn":27},{"ruleId":"325","severity":1,"message":"333","line":111,"column":22,"nodeType":"327","messageId":"328","endLine":111,"endColumn":29},{"ruleId":"325","severity":1,"message":"351","line":1,"column":8,"nodeType":"327","messageId":"328","endLine":1,"endColumn":13},{"ruleId":"325","severity":1,"message":"351","line":1,"column":8,"nodeType":"327","messageId":"328","endLine":1,"endColumn":13},{"ruleId":"325","severity":1,"message":"329","line":1,"column":28,"nodeType":"327","messageId":"328","endLine":1,"endColumn":36},{"ruleId":"325","severity":1,"message":"385","line":1,"column":38,"nodeType":"327","messageId":"328","endLine":1,"endColumn":48},{"ruleId":"339","severity":1,"message":"386","line":8,"column":5,"nodeType":"361","endLine":8,"endColumn":9,"suggestions":"387"},{"ruleId":"339","severity":1,"message":"388","line":18,"column":6,"nodeType":"327","endLine":18,"endColumn":9},{"ruleId":"339","severity":1,"message":"389","line":18,"column":6,"nodeType":"327","endLine":18,"endColumn":9,"suggestions":"390"},{"ruleId":"325","severity":1,"message":"391","line":78,"column":11,"nodeType":"327","messageId":"328","endLine":78,"endColumn":24},{"ruleId":"325","severity":1,"message":"392","line":2,"column":38,"nodeType":"327","messageId":"328","endLine":2,"endColumn":45},{"ruleId":"325","severity":1,"message":"393","line":26,"column":10,"nodeType":"327","messageId":"328","endLine":26,"endColumn":17},{"ruleId":"325","severity":1,"message":"394","line":43,"column":9,"nodeType":"327","messageId":"328","endLine":43,"endColumn":13},{"ruleId":"325","severity":1,"message":"392","line":1,"column":23,"nodeType":"327","messageId":"328","endLine":1,"endColumn":30},{"ruleId":"334","severity":1,"message":"335","line":72,"column":32,"nodeType":"336","messageId":"337","endLine":72,"endColumn":34},{"ruleId":"334","severity":1,"message":"335","line":85,"column":32,"nodeType":"336","messageId":"337","endLine":85,"endColumn":34},{"ruleId":"334","severity":1,"message":"335","line":86,"column":32,"nodeType":"336","messageId":"337","endLine":86,"endColumn":34},{"ruleId":"325","severity":1,"message":"392","line":1,"column":36,"nodeType":"327","messageId":"328","endLine":1,"endColumn":43},{"ruleId":"325","severity":1,"message":"395","line":2,"column":37,"nodeType":"327","messageId":"328","endLine":2,"endColumn":47},{"ruleId":"339","severity":1,"message":"396","line":26,"column":6,"nodeType":"361","endLine":26,"endColumn":19,"suggestions":"397"},{"ruleId":"325","severity":1,"message":"398","line":40,"column":7,"nodeType":"327","messageId":"328","endLine":40,"endColumn":16},{"ruleId":"334","severity":1,"message":"335","line":94,"column":48,"nodeType":"336","messageId":"337","endLine":94,"endColumn":50},{"ruleId":"399","severity":1,"message":"400","line":52,"column":13,"nodeType":"401","endLine":52,"endColumn":22},{"ruleId":"325","severity":1,"message":"402","line":2,"column":15,"nodeType":"327","messageId":"328","endLine":2,"endColumn":22},{"ruleId":"325","severity":1,"message":"403","line":2,"column":24,"nodeType":"327","messageId":"328","endLine":2,"endColumn":30},{"ruleId":"325","severity":1,"message":"333","line":10,"column":16,"nodeType":"327","messageId":"328","endLine":10,"endColumn":23},{"ruleId":"325","severity":1,"message":"403","line":2,"column":65,"nodeType":"327","messageId":"328","endLine":2,"endColumn":71},{"ruleId":"325","severity":1,"message":"384","line":21,"column":17,"nodeType":"327","messageId":"328","endLine":21,"endColumn":27},{"ruleId":"325","severity":1,"message":"402","line":2,"column":30,"nodeType":"327","messageId":"328","endLine":2,"endColumn":37},{"ruleId":"325","severity":1,"message":"404","line":2,"column":65,"nodeType":"327","messageId":"328","endLine":2,"endColumn":76},{"ruleId":"325","severity":1,"message":"333","line":12,"column":15,"nodeType":"327","messageId":"328","endLine":12,"endColumn":22},{"ruleId":"325","severity":1,"message":"405","line":21,"column":39,"nodeType":"327","messageId":"328","endLine":21,"endColumn":53},{"ruleId":"334","severity":1,"message":"335","line":97,"column":32,"nodeType":"336","messageId":"337","endLine":97,"endColumn":34},{"ruleId":"334","severity":1,"message":"335","line":108,"column":32,"nodeType":"336","messageId":"337","endLine":108,"endColumn":34},{"ruleId":"334","severity":1,"message":"335","line":109,"column":32,"nodeType":"336","messageId":"337","endLine":109,"endColumn":34},{"ruleId":"334","severity":1,"message":"335","line":112,"column":32,"nodeType":"336","messageId":"337","endLine":112,"endColumn":34},{"ruleId":"334","severity":1,"message":"335","line":189,"column":34,"nodeType":"336","messageId":"337","endLine":189,"endColumn":36},{"ruleId":"325","severity":1,"message":"395","line":2,"column":37,"nodeType":"327","messageId":"328","endLine":2,"endColumn":47},{"ruleId":"339","severity":1,"message":"396","line":26,"column":6,"nodeType":"361","endLine":26,"endColumn":19,"suggestions":"406"},{"ruleId":"325","severity":1,"message":"398","line":40,"column":7,"nodeType":"327","messageId":"328","endLine":40,"endColumn":16},{"ruleId":"334","severity":1,"message":"335","line":104,"column":48,"nodeType":"336","messageId":"337","endLine":104,"endColumn":50},"no-native-reassign",["407"],"no-negated-in-lhs",["408"],"no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Link' is defined but never used.","'loading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Transition' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","CallExpression","React Hook useEffect has missing dependencies: 'context', 'defaultData', 'options', and 'params'. Either include them or remove the dependency array.",["409"],"'Icon' is defined but never used.","'SearchField' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","no-useless-escape","Unnecessary escape character: \\=.","Literal","unnecessaryEscape",["410","411"],"'getImgSrc' is defined but never used.","'useFieldArray' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'time'. Either include it or remove the dependency array.","ArrayExpression",["412"],"'Text' is defined but never used.","'ToastExample' is defined but never used.","'prepend' is assigned a value but never used.","'swap' is assigned a value but never used.","'move' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'append' and 'fields.length'. Either include them or remove the dependency array.",["413"],"'useWatch' is defined but never used.","React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["414"],"'useForm' is defined but never used.","'FilesShow' is defined but never used.","'ImagesShow' is defined but never used.","'insert' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'pre' is assigned a value but never used.","'Button' is defined but never used.","'error' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'current'. Either include it or remove the dependency array.",["415"],"React Hook useCallback was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useCallback has missing dependencies: 'current' and 'delay'. Either include them or remove the dependency array.",["416"],"'reactQuillRef' is assigned a value but never used.","'Spinner' is defined but never used.","'useDate' is defined but never used.","'data' is assigned a value but never used.","'IconButton' is defined but never used.","React Hook useEffect has a missing dependency: 'debounce'. Either include it or remove the dependency array.",["417"],"'stateName' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Heading' is defined but never used.","'Column' is defined but never used.","'ButtonGroup' is defined but never used.","'delCodeLoading' is assigned a value but never used.",["418"],"no-global-assign","no-unsafe-negation",{"desc":"419","fix":"420"},{"messageId":"421","fix":"422","desc":"423"},{"messageId":"424","fix":"425","desc":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"437","fix":"439"},"Update the dependencies array to be: [context, defaultData, options, params]",{"range":"440","text":"441"},"removeEscape",{"range":"442","text":"443"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"444","text":"445"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [message.message, time]",{"range":"446","text":"447"},"Update the dependencies array to be: [append, fields.length]",{"range":"448","text":"449"},"Update the dependencies array to be: [callback]",{"range":"450","text":"451"},"Update the dependencies array to be: [current, fn]",{"range":"452","text":"453"},"Update the dependencies array to be: [current, delay]",{"range":"454","text":"455"},"Update the dependencies array to be: [changeValue, debounce]",{"range":"456","text":"457"},{"range":"458","text":"457"},[4109,4176],"[context, defaultData, options, params]",[1334,1335],"",[1334,1334],"\\",[401,418],"[message.message, time]",[514,516],"[append, fields.length]",[699,705],"[callback]",[252,256],"[current, fn]",[479,482],"[current, delay]",[921,934],"[changeValue, debounce]",[924,937]]